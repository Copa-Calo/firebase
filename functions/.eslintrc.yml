env:
    browser: false
    es6: true
    node: true

parser: '@typescript-eslint/parser'

parserOptions:
    project: tsconfig.json
    sourceType: module


plugins:
    - import
    - '@typescript-eslint'

rules:
    '@typescript-eslint/adjacent-overload-signatures': error
    '@typescript-eslint/quotes':
        - error
        - single
        - { allowTemplateLiterals: true }
    '@typescript-eslint/member-delimiter-style':
        - error
        -
            multiline:
                delimiter: none
                requireLast: true
            singleline:
                delimiter: semi
                requireLast: false
    '@typescript-eslint/no-empty-function': error
    '@typescript-eslint/no-empty-interface': warn
    '@typescript-eslint/no-floating-promises': error
    '@typescript-eslint/no-unnecessary-type-assertion': error
    '@typescript-eslint/prefer-for-of': warn
    '@typescript-eslint/semi':
        - error
        - never
    '@typescript-eslint/triple-slash-reference': error
    '@typescript-eslint/unified-signatures': warn
    '@typescript-eslint/explicit-function-return-type':
        - error
        - { allowExpressions: true }
    no-param-reassign: error
    comma-dangle: warn
    constructor-super: error
    curly: error
    eqeqeq:
        - warn
        - always
    import/no-deprecated: warn
    import/no-extraneous-dependencies:
        - error
        - devDependencies: false
    import/no-unassigned-import: warn
    no-cond-assign: error
    no-duplicate-case: error
    no-duplicate-imports: error
    no-empty:
        - error
        - allowEmptyCatch: false
    no-invalid-this: error
    no-new-wrappers: error
    no-redeclare: error
    no-sequences: error
    no-shadow:
        - error
        - hoist: all
    no-throw-literal: error
    no-unsafe-finally: error
    no-unused-labels: error
    no-var: warn
    no-void: error
    prefer-const: warn
